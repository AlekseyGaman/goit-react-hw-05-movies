{"version":3,"file":"static/js/866.138fc038.chunk.js","mappings":"0WAEaA,EAAkBC,EAAAA,GAAAA,IAAH,sHAOfC,EAAaD,EAAAA,GAAAA,KAAH,yMAWVE,EAAmBF,EAAAA,GAAAA,OAAH,0RAgBhBG,EAAkBH,EAAAA,GAAAA,MAAH,0PAefI,EAAaJ,EAAAA,GAAAA,OAAH,+oB,SCkDvB,EArFe,WAAO,IAAD,EACnB,GAA0BK,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAsCF,EAAAA,EAAAA,UAAS,GAA/C,eAAOG,EAAP,KAAoBC,EAApB,KACA,GAA4BJ,EAAAA,EAAAA,UAAS,IAArC,eAAOK,EAAP,KAAeC,EAAf,KACA,GAAsCN,EAAAA,EAAAA,UAAS,GAA/C,eAAOO,EAAP,KAAoBC,EAApB,KACA,GAA4BR,EAAAA,EAAAA,WAAS,GAArC,eAAOS,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KAEMC,EAAU,UAAGF,EAAaG,IAAI,iBAApB,QAAiC,GACjD,GAAmCC,EAAAA,EAAAA,MAA3BC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,aACZC,GAAWC,EAAAA,EAAAA,OAcjBC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,kHAA8GrB,EAA9G,iBAA4HM,EAA5H,wBAEf,GADAL,EAASY,GACJb,EAAL,CAGA,IAAMsB,EAAQ,mCAAG,oGAEbb,GAAU,GAFG,UAGcc,EAAAA,EAAAA,GAAMF,GAHpB,OAGPG,EAHO,OAIbnB,GAAU,SAAAoB,GAAU,wBAAQA,IAAR,OAAuBD,EAAaE,SAApC,IACpBvB,EAAeqB,EAAaG,eACR,IAAhBrB,IAC6B,IAA/BkB,EAAaG,cACTC,EAAAA,GAAAA,MAAY,iCACZA,EAAAA,GAAAA,QAAA,0BACqBJ,EAAaG,cADlC,aATO,kDAcbC,EAAAA,GAAAA,MAAY,oCAdC,yBAgBbnB,GAAU,GAhBG,6EAAH,qDAmBda,GApBC,CAqBF,GAAE,CAAChB,EAAaN,EAAOa,IAExB,IAIMgB,EAAaC,KAAKC,MAAM7B,EAAcE,EAAO4B,QAEnD,OACE,iCACE,SAACvC,EAAD,WACE,UAACE,EAAD,CAAYsC,SAAUhB,GAjDX,SAAAiB,GACfC,QAAQC,IAAIF,EAAMG,MAEdrC,IAAUkC,IAGdtB,EAAgB,CAAE0B,OAAQJ,EAAMG,OAChChC,EAAU,IACVE,EAAe,GACfN,EAASiC,EAAMG,MAChB,IAuCK,WACE,SAACxC,GAAD,gBACE0C,KAAK,QACDvB,EAAS,OAAQ,CAAEwB,UAAU,KAFnC,IAGEC,aAAa,MACbC,WAAS,EACTC,YAAY,mBAEd,SAAC/C,EAAD,CAAkB2C,KAAK,SAAvB,UACE,SAAC,MAAD,CAAUK,KAAM,aAItB,SAACC,EAAA,EAAD,CAAWzC,OAAQA,EAAQc,SAAUA,IAClB,IAAlBd,EAAO4B,QAA+B,IAAfH,IACtB,SAAC/B,EAAD,CAAYgD,QAxBK,WACrBvC,GAAe,SAAAwC,GAAQ,OAAIA,EAAW,CAAf,GACxB,EAsBK,uBAGDvC,IAAU,SAACwC,EAAA,EAAD,KACX,SAAC,KAAD,CAAgBC,UAAW,SAGhC,C","sources":["Pages/Movies/Movies.styled.js","Pages/Movies/Movies.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const SearchbarHeader = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: 30px;\n`;\n\nexport const SearchForm = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n  border: 1px solid #000;\n`;\n\nexport const SearchFormButton = styled.button`\n  display: flex;\n  align-items: center;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  :hover {\n    opacity: 1;\n    color: #ce4d45;\n  }\n`;\n\nexport const SearchFormInput = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 5px;\n  padding-right: 5px;\n  ::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n\nexport const LoadButton = styled.button`\n  padding: 8px 16px;\n  border-radius: 3px;\n  background-color: #dddddd;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  text-align: center;\n  display: block;\n  color: #fff;\n  border: 0;\n  text-decoration: none;\n  cursor: pointer;\n  font-family: inherit;\n  font-size: 18px;\n  line-height: 24px;\n  font-style: normal;\n  font-weight: 500;\n  width: 180px;\n  margin: 0 auto;\n  margin-bottom: 40px;\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n  :hover,\n  :focus {\n    color: #ce4d45;\n    background-color: #c4c4c4;\n  }\n`;\n","import { useEffect, useState } from 'react';\nimport { useSearchParams, useLocation } from 'react-router-dom';\nimport { useForm } from 'react-hook-form';\nimport { FaSearch } from 'react-icons/fa';\nimport { ToastContainer, toast } from 'react-toastify';\nimport Loader from 'components/Loader/Loader';\nimport MovieList from 'components/MovieList/MovieList';\nimport fetch from '../../components/ApiFetch';\nimport {\n  SearchbarHeader,\n  SearchForm,\n  SearchFormButton,\n  SearchFormInput,\n  LoadButton,\n} from './Movies.styled';\n\nconst Movies = () => {\n  const [query, setQuery] = useState('');\n  const [totalMovies, setTotalMovies] = useState(0);\n  const [movies, setMovies] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [loader, setLoader] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const searchName = searchParams.get('search') ?? '';\n  const { register, handleSubmit } = useForm();\n  const location = useLocation();\n\n  const onSubmit = value => {\n    console.log(value.name);\n    // console.log(value);\n    if (query === value) {\n      return;\n    }\n    setSearchParams({ search: value.name });\n    setMovies([]);\n    setCurrentPage(1);\n    setQuery(value.name);\n  };\n\n  useEffect(() => {\n    const searchUrl = `https://api.themoviedb.org/3/search/movie?api_key=977f926e593c9ca5548c1d2b3d2a0ca4&language=en-US&query=${query}&page=${currentPage}&include_adult=false`;\n    setQuery(searchName);\n    if (!query) {\n      return;\n    }\n    const getMovie = async () => {\n      try {\n        setLoader(true);\n        const searchMovies = await fetch(searchUrl);\n        setMovies(prevMovies => [...prevMovies, ...searchMovies.results]);\n        setTotalMovies(searchMovies.total_results);\n        if (currentPage === 1) {\n          searchMovies.total_results === 0\n            ? toast.error(\"Oops, we didn't find anything\")\n            : toast.success(\n                `Great, we found ${searchMovies.total_results} movies`\n              );\n        }\n      } catch {\n        toast.error('Oops something wrong - try again');\n      } finally {\n        setLoader(false);\n      }\n    };\n    getMovie();\n  }, [currentPage, query, searchName]);\n\n  const loadMoreMovies = () => {\n    setCurrentPage(prevPage => prevPage + 1);\n  };\n\n  const totalPages = Math.round(totalMovies / movies.length);\n\n  return (\n    <>\n      <SearchbarHeader>\n        <SearchForm onSubmit={handleSubmit(onSubmit)}>\n          <SearchFormInput\n            type=\"text\"\n            {...register('name', { required: true })}\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search movie\"\n          />\n          <SearchFormButton type=\"submit\">\n            <FaSearch size={30} />\n          </SearchFormButton>\n        </SearchForm>\n      </SearchbarHeader>\n      <MovieList movies={movies} location={location} />\n      {movies.length !== 0 && totalPages !== 1 && (\n        <LoadButton onClick={loadMoreMovies}>Load more</LoadButton>\n      )}\n\n      {loader && <Loader />}\n      <ToastContainer autoClose={2500} />\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["SearchbarHeader","styled","SearchForm","SearchFormButton","SearchFormInput","LoadButton","useState","query","setQuery","totalMovies","setTotalMovies","movies","setMovies","currentPage","setCurrentPage","loader","setLoader","useSearchParams","searchParams","setSearchParams","searchName","get","useForm","register","handleSubmit","location","useLocation","useEffect","searchUrl","getMovie","fetch","searchMovies","prevMovies","results","total_results","toast","totalPages","Math","round","length","onSubmit","value","console","log","name","search","type","required","autoComplete","autoFocus","placeholder","size","MovieList","onClick","prevPage","Loader","autoClose"],"sourceRoot":""}