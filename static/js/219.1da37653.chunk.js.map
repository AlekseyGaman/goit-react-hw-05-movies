{"version":3,"file":"static/js/219.1da37653.chunk.js","mappings":"wSAEaA,EAAWC,EAAAA,GAAAA,GAAH,uRAaRC,EAAWD,EAAAA,GAAAA,GAAH,kF,SC6CrB,EArDa,WACX,OAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA4BF,EAAAA,EAAAA,WAAS,GAArC,eAAOG,EAAP,KAAeC,EAAf,KAEQC,GAAOC,EAAAA,EAAAA,MAAPD,GAqBR,OAjBAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAO,6CAAyCH,EAAzC,oEAEPI,EAAO,mCAAG,2FACdL,GAAU,GADI,mBAGWM,EAAAA,EAAAA,GAAMF,GAHjB,OAGNG,EAHM,OAIZT,EAAQS,EAASV,MAJL,gDAMZW,EAAAA,GAAAA,MAAY,oCANA,yBAQZR,GAAU,GARE,4EAAH,qDAWbK,GACD,GAAE,CAACJ,KAGF,gCACGF,IAAU,SAACU,EAAA,EAAD,IACM,IAAhBZ,EAAKa,QAAiBX,GAGrB,SAACN,EAAD,UACmB,IAAhBI,EAAKa,QAAiBX,EAGrBF,EAAKc,KAAI,gBAAGV,EAAH,EAAGA,GAAIW,EAAP,EAAOA,UAAWC,EAAlB,EAAkBA,KAAMC,EAAxB,EAAwBA,aAAxB,OACP,UAACnB,EAAD,YACE,gBACEoB,QAAQ,OACRC,IAAKF,EAlCL,kCAkC8BA,EAjC9B,kHAkCAG,IAAKJ,KAEP,uBAAIA,KACJ,uCAAeD,GAAwB,iBAP1BX,EADR,KAFT,8DAJJ,6DAsBP,C","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CastList = styled.ul`\n  justify-content: center;\n  list-style: none;\n  display: grid;\n  grid-template-columns: 200px 200px 200px 200px;\n  grid-template-rows: 380px 380px 380px 380px;\n  gap: 20px 30px;\n  grid-template-areas:\n    '. . . .'\n    '. . . .'\n    '. . . .';\n`;\n\nexport const CastItem = styled.li`\n  display: flex;\n  flex-direction: column;\n  gap: 7px;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport fetch from '../../components/ApiFetch';\nimport Loader from 'components/Loader/Loader';\nimport { CastList, CastItem } from './Cast.styled';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const [loader, setLoader] = useState(false);\n\n  const { id } = useParams();\n  const imgLink = 'https://image.tmdb.org/t/p/w300';\n  const defaultImg = `https://static.vecteezy.com/system/resources/previews/005/337/799/original/icon-image-not-found-free-vector.jpg`;\n\n  useEffect(() => {\n    const castUrl = `https://api.themoviedb.org/3/movie/${id}/credits?api_key=977f926e593c9ca5548c1d2b3d2a0ca4&language=en-US`;\n\n    const getCast = async () => {\n      setLoader(true);\n      try {\n        const getFetch = await fetch(castUrl);\n        setCast(getFetch.cast);\n      } catch {\n        toast.error('Oops something wrong - try again');\n      } finally {\n        setLoader(false);\n      }\n    };\n    getCast();\n  }, [id]);\n\n  return (\n    <>\n      {loader && <Loader />}\n      {cast.length === 0 && !loader ? (\n        <h1>Sorry, we didn't find anything</h1>\n      ) : (\n        <CastList>\n          {cast.length === 0 && !loader ? (\n            <h3>Sorry, we didn't find anything</h3>\n          ) : (\n            cast.map(({ id, character, name, profile_path }) => (\n              <CastItem key={id}>\n                <img\n                  loading=\"lazy\"\n                  src={profile_path ? imgLink + profile_path : defaultImg}\n                  alt={name}\n                />\n                <p>{name}</p>\n                <p>Character: {character ? character : 'undefined'}</p>\n              </CastItem>\n            ))\n          )}\n        </CastList>\n      )}\n    </>\n  );\n};\n\nexport default Cast;\n"],"names":["CastList","styled","CastItem","useState","cast","setCast","loader","setLoader","id","useParams","useEffect","castUrl","getCast","fetch","getFetch","toast","Loader","length","map","character","name","profile_path","loading","src","alt"],"sourceRoot":""}