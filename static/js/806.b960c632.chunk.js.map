{"version":3,"file":"static/js/806.b960c632.chunk.js","mappings":"wSAEaA,EAAcC,EAAAA,GAAAA,GAAH,8IASXC,EAAcD,EAAAA,GAAAA,GAAH,kF,SCsCxB,EA1CgB,WACd,OAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA4BF,EAAAA,EAAAA,WAAS,GAArC,eAAOG,EAAP,KAAeC,EAAf,KAEQC,GAAOC,EAAAA,EAAAA,MAAPD,GAmBR,OAjBAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,6CAAyCH,EAAzC,2EAEVI,EAAU,mCAAG,2FACjBL,GAAU,GADO,mBAGMM,EAAAA,EAAAA,GAAMF,GAHZ,OAGTG,EAHS,OAIfT,EAAWS,EAAOC,SAJH,gDAMfC,EAAAA,GAAAA,MAAY,oCANG,yBAQfT,GAAU,GARK,4EAAH,qDAWhBK,GACD,GAAE,CAACJ,KAGF,2BACGF,IAAU,SAACW,EAAA,EAAD,IACS,IAAnBb,EAAQc,QAAiBZ,GAGxB,SAACN,EAAD,UACGI,EAAQe,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASb,EAApB,EAAoBA,GAApB,OACX,UAACN,EAAD,YACE,qCAAakB,MACb,uBAAIC,MAFYb,EADP,OAHf,6DAaP,C","sources":["components/Reviews/Reviews.styled.js","components/Reviews/Reviews.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ReviewsList = styled.ul`\n  display: flex;\n  width: 1200px;\n  margin: auto;\n  flex-direction: column;\n  gap: 20px;\n  margin-bottom: 30px;\n`;\n\nexport const ReviewsItem = styled.li`\n  display: flex;\n  flex-direction: column;\n  gap: 7px;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport fetch from '../../components/ApiFetch';\nimport Loader from 'components/Loader/Loader';\nimport { ReviewsList, ReviewsItem } from './Reviews.styled';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const [loader, setLoader] = useState(false);\n\n  const { id } = useParams();\n\n  useEffect(() => {\n    const reviewsUrl = `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=977f926e593c9ca5548c1d2b3d2a0ca4&language=en-US&page=1`;\n\n    const getReviews = async () => {\n      setLoader(true);\n      try {\n        const getApi = await fetch(reviewsUrl);\n        setReviews(getApi.results);\n      } catch {\n        toast.error('Oops something wrong - try again');\n      } finally {\n        setLoader(false);\n      }\n    };\n    getReviews();\n  }, [id]);\n\n  return (\n    <div>\n      {loader && <Loader />}\n      {reviews.length === 0 && !loader ? (\n        <h1>Sorry, we didn't find anything</h1>\n      ) : (\n        <ReviewsList>\n          {reviews.map(({ author, content, id }) => (\n            <ReviewsItem key={id}>\n              <h3>Author: {author}</h3>\n              <p>{content}</p>\n            </ReviewsItem>\n          ))}\n        </ReviewsList>\n      )}\n    </div>\n  );\n};\n\nexport default Reviews;\n"],"names":["ReviewsList","styled","ReviewsItem","useState","reviews","setReviews","loader","setLoader","id","useParams","useEffect","reviewsUrl","getReviews","fetch","getApi","results","toast","Loader","length","map","author","content"],"sourceRoot":""}