{"version":3,"file":"static/js/258.1c078e1f.chunk.js","mappings":"oUAGaA,EAAOC,EAAAA,GAAAA,IAAH,wJASJC,GAAWD,EAAAA,EAAAA,IAAOE,EAAAA,GAAPF,CAAH,wLAYRG,EAAgBH,EAAAA,GAAAA,IAAH,wDAKbI,EAAWJ,EAAAA,GAAAA,IAAH,mFAMRK,EAAsBL,EAAAA,GAAAA,IAAH,2GAOnBM,EAAiBN,EAAAA,GAAAA,IAAH,gF,SC2D3B,EAtFqB,WACnB,OAA4BO,EAAAA,EAAAA,WAAS,GAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA0BF,EAAAA,EAAAA,UAAS,CAAC,GAApC,eAAOG,EAAP,KAAcC,EAAd,KAEQC,GAAOC,EAAAA,EAAAA,MAAPD,GACFE,GAAWC,EAAAA,EAAAA,MACXC,EAAaF,EAASG,MAAQH,EAASG,MAAMC,KAAhC,WAKnBC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,6CAAyCR,EAAzC,4DACjBH,GAAU,GACV,IAAMY,EAAQ,mCAAG,8GAEgBC,EAAAA,EAAAA,GAAMF,GAFtB,OAEPG,EAFO,OAGbZ,EAASY,GAHI,gDAKbC,EAAAA,GAAAA,MAAY,oCALC,yBAObf,GAAU,GAPG,4EAAH,qDAUdY,GACD,GAAE,CAACT,IAEJ,IACEa,EAOEf,EAPFe,KACAC,EAMEhB,EANFgB,eACAC,EAKEjB,EALFiB,OACAC,EAIElB,EAJFkB,SACAC,EAGEnB,EAHFmB,YACAC,EAEEpB,EAFFoB,aACAC,EACErB,EADFqB,aAGF,GAAKD,EAIL,OACE,gCACGtB,IAAU,SAACwB,EAAA,EAAD,KACX,UAACjC,EAAD,YACE,UAACI,EAAD,CAAeS,GAAIA,EAAnB,WACE,gBACEqB,IAAKJ,EAvCC,kCAuCuBA,EAtCvB,uDAuCNK,IAAG,OAAER,QAAF,IAAEA,EAAAA,EAAkBD,KAEzB,UAACrB,EAAD,YACE,iCACGsB,QADH,IACGA,EAAAA,EAAkBD,EADrB,KAC6BK,EAAaK,MAAM,EAAG,GADnD,QAGA,yCAAgC,GAAfJ,GAAmBK,QAAQ,GAA5C,QACA,sCACA,uBAAIR,KACJ,oCACA,uBACGD,EAAOU,OACJV,EAAOW,KAAI,qBAAGb,IAAH,IAAoBc,KAAK,MACpC,oBAEN,SAACtC,EAAD,CAAUuC,GAAIxB,EAAd,4BAIJ,UAACX,EAAD,YACE,oDACA,UAACC,EAAD,YACE,SAAC,KAAD,CAASkC,GAAG,OAAOvB,MAAO,CAAEC,KAAMF,GAAlC,mBAGA,SAAC,KAAD,CAASwB,GAAG,UAAUvB,MAAO,CAAEC,KAAMF,GAArC,+BAMN,SAAC,EAAAyB,SAAD,CAAUC,SAAU,KAApB,UACE,SAAC,KAAD,QAIP,C","sources":["Pages/MovieDetails/MovieDetails.styled.js","Pages/MovieDetails/MovieDetails.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Main = styled.div`\n  width: 1100px;\n  display: flex;\n  margin: auto;\n  flex-direction: column;\n  align-items: center;\n  margin-bottom: 30px;\n`;\n\nexport const BackLink = styled(Link)`\n  width: 80px;\n  padding: 10px;\n  border-radius: 20px;\n  background-color: #dddddd;\n\n  :hover {\n    color: #ce4d45;\n    background-color: #c4c4c4;\n  }\n`;\n\nexport const InfoContainer = styled.div`\n  display: flex;\n  gap: 20px;\n`;\n\nexport const MainInfo = styled.div`\n  display: flex;\n  gap: 15px;\n  flex-direction: column;\n`;\n\nexport const AdditionalContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 10px;\n`;\n\nexport const AdditionalInfo = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 10px;\n`;\n","import { useParams, useLocation, Outlet, NavLink } from 'react-router-dom';\nimport { useEffect, useState, Suspense } from 'react';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport fetch from '../../components/ApiFetch';\nimport Loader from 'components/Loader/Loader';\nimport {\n  Main,\n  BackLink,\n  InfoContainer,\n  MainInfo,\n  AdditionalContainer,\n  AdditionalInfo,\n} from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const [loader, setLoader] = useState(false);\n  const [movie, setMovie] = useState({});\n\n  const { id } = useParams();\n  const location = useLocation();\n  const returnBack = location.state ? location.state.from : `/movies`;\n\n  const imgLink = 'https://image.tmdb.org/t/p/w300';\n  const defaultImg = `https://ranobehub.org/img/ranobe/posters/default.jpg`;\n\n  useEffect(() => {\n    const searchMovie = `https://api.themoviedb.org/3/movie/${id}?api_key=977f926e593c9ca5548c1d2b3d2a0ca4&language=en-US`;\n    setLoader(true);\n    const getMovie = async () => {\n      try {\n        const getDescription = await fetch(searchMovie);\n        setMovie(getDescription);\n      } catch {\n        toast.error('Oops something wrong - try again');\n      } finally {\n        setLoader(false);\n      }\n    };\n    getMovie();\n  }, [id]);\n\n  const {\n    name,\n    original_title,\n    genres,\n    overview,\n    poster_path,\n    release_date,\n    vote_average,\n  } = movie;\n\n  if (!release_date) {\n    return;\n  }\n\n  return (\n    <>\n      {loader && <Loader />}\n      <Main>\n        <InfoContainer id={id}>\n          <img\n            src={poster_path ? imgLink + poster_path : defaultImg}\n            alt={original_title ?? name}\n          />\n          <MainInfo>\n            <h1>\n              {original_title ?? name} ({release_date.slice(0, 4)})\n            </h1>\n            <p>User Score: {(vote_average * 10).toFixed(1)}%</p>\n            <h2>Overview</h2>\n            <p>{overview}</p>\n            <h3>Genres</h3>\n            <p>\n              {genres.length\n                ? genres.map(({ name }) => name).join(', ')\n                : 'Unknown genres'}\n            </p>\n            <BackLink to={returnBack}>Go back</BackLink>\n          </MainInfo>\n        </InfoContainer>\n\n        <AdditionalContainer>\n          <h4>Additional Information</h4>\n          <AdditionalInfo>\n            <NavLink to=\"cast\" state={{ from: returnBack }}>\n              Cast\n            </NavLink>\n            <NavLink to=\"reviews\" state={{ from: returnBack }}>\n              Reviews\n            </NavLink>\n          </AdditionalInfo>\n        </AdditionalContainer>\n      </Main>\n      <Suspense fallback={null}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["Main","styled","BackLink","Link","InfoContainer","MainInfo","AdditionalContainer","AdditionalInfo","useState","loader","setLoader","movie","setMovie","id","useParams","location","useLocation","returnBack","state","from","useEffect","searchMovie","getMovie","fetch","getDescription","toast","name","original_title","genres","overview","poster_path","release_date","vote_average","Loader","src","alt","slice","toFixed","length","map","join","to","Suspense","fallback"],"sourceRoot":""}